syntax = "proto3";

import "OrganizationBase.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";


option java_multiple_files = true;
option java_package = "org.myddd.extensions.organization.api";
option java_outer_classname = "EmployeeApplicationProto";

package org.myddd.extensions.organization.api;


service EmployeeApplication {

    /**
     * 创建一个雇员
     */
    rpc CreateEmployee(EmployeeDto) returns (EmployeeDto);

    /**
     * 根据ID查询一个雇员明细
     */
    rpc QueryEmployee(google.protobuf.Int64Value) returns (OptionalEmployeeDto);

    /**
     * 将雇员分配到指定部门
     */
    rpc AssignEmployeeToOrganization(AssignEmployeeToOrganizationDto) returns (google.protobuf.BoolValue);

    /**
     * 分页查询组织下的雇员信息，支持公司及子部门
     */
    rpc PageQueryEmployeesByOrg(PageQueryDto) returns (PageEmployeeDto);


    /**
     * 分布查询一个公司下的所有雇员信息
     */
    rpc PageQueryAllEmployeesInOrg(EmployeePageQueryDto) returns (PageEmployeeDto);

    /**
     * 更新一个雇员
     */
    rpc UpdateEmployee(EmployeeDto) returns (EmployeeDto);

    /**
     * 查询用户在指定组织下的雇员信息
     */
    rpc QueryEmployeeByUserIdAndOrgId(QueryEmployeeByUserAndOrg) returns (OptionalEmployeeDto);

    /**
     * 批量修改，将一批雇员重新与指定的一批部门关联上
     */
    rpc ReAssignEmployeesToOrganizations(ReAssignEmployeesToOrganizationsDto) returns (google.protobuf.BoolValue);
}

message OptionalEmployeeDto {
    optional EmployeeDto employee = 1;
}

message ReAssignEmployeesToOrganizationsDto {
    repeated int64 org_id_list = 1;
    repeated int64 employee_id_list = 2;
}

message QueryEmployeeByUserAndOrg {
    int64 org_id = 1;
    int64 user_id = 2;
}


message AssignEmployeeToOrganizationDto {
    int64 employee_id = 1;
    int64 org_id = 2;
    string operator = 3;
}

message PageQueryDto{
    int32 page = 1;
    int32 page_size = 2;
    int64 org_id = 3;
    string search = 4;
    repeated int64 limits = 5;
}

message PageEmployeeDto{
    int64 total = 1;
    int64 page = 2;
    int32 page_size = 3;
    repeated EmployeeDto employees = 4;
}

message BatchImportEmployeesDto{
    bytes content = 1;
    int64 org_id = 2;
}